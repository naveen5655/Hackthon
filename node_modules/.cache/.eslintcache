[{"E:\\Practice\\Frontend\\src\\index.js":"1","E:\\Practice\\Frontend\\src\\App.js":"2","E:\\Practice\\Frontend\\src\\pages\\AboutUs.jsx":"3","E:\\Practice\\Frontend\\src\\pages\\AddCardDetails.jsx":"4","E:\\Practice\\Frontend\\src\\pages\\Header.jsx":"5","E:\\Practice\\Frontend\\src\\pages\\Product.jsx":"6","E:\\Practice\\Frontend\\src\\pages\\ContactUs.jsx":"7","E:\\Practice\\Frontend\\src\\pages\\HomePage.jsx":"8","E:\\Practice\\Frontend\\src\\productComponent\\AddProductForm.jsx":"9","E:\\Practice\\Frontend\\src\\productComponent\\AddCategoryForm.jsx":"10","E:\\Practice\\Frontend\\src\\userComponent\\AddUserForm.jsx":"11","E:\\Practice\\Frontend\\src\\userComponent\\MyCart.jsx":"12","E:\\Practice\\Frontend\\src\\userComponent\\UserLoginForm.jsx":"13","E:\\Practice\\Frontend\\src\\userComponent\\SearchOrder.jsx":"14","E:\\Practice\\Frontend\\src\\userComponent\\DeliveryPersonLogin.jsx":"15","E:\\Practice\\Frontend\\src\\userComponent\\MyOrder.jsx":"16","E:\\Practice\\Frontend\\src\\userComponent\\AllOrders.jsx":"17","E:\\Practice\\Frontend\\src\\userComponent\\RegisterAdminForm.jsx":"18","E:\\Practice\\Frontend\\src\\userComponent\\AdminLoginPage.jsx":"19","E:\\Practice\\Frontend\\src\\userComponent\\AddDeliveryPerson.jsx":"20","E:\\Practice\\Frontend\\src\\userComponent\\AssignDeliveryToOrders.jsx":"21","E:\\Practice\\Frontend\\src\\userComponent\\MyDeliveries.jsx":"22","E:\\Practice\\Frontend\\src\\pages\\Carousel.jsx":"23","E:\\Practice\\Frontend\\src\\productComponent\\CategoryNavigator.jsx":"24","E:\\Practice\\Frontend\\src\\pages\\RoleNav.jsx":"25","E:\\Practice\\Frontend\\src\\productComponent\\GetAllCategories.jsx":"26","E:\\Practice\\Frontend\\src\\productComponent\\ProductCard.jsx":"27","E:\\Practice\\Frontend\\src\\pages\\NormalHeader.jsx":"28","E:\\Practice\\Frontend\\src\\pages\\HeaderUser.jsx":"29","E:\\Practice\\Frontend\\src\\pages\\AdminHeader.jsx":"30","E:\\Practice\\Frontend\\src\\pages\\DeliveryPersonHeader.jsx":"31"},{"size":298,"mtime":1669875296272,"results":"32","hashOfConfig":"33"},{"size":3032,"mtime":1669875296229,"results":"34","hashOfConfig":"33"},{"size":1170,"mtime":1670029683941,"results":"35","hashOfConfig":"33"},{"size":4076,"mtime":1670071931282,"results":"36","hashOfConfig":"33"},{"size":1751,"mtime":1670066822238,"results":"37","hashOfConfig":"33"},{"size":6022,"mtime":1670063496510,"results":"38","hashOfConfig":"33"},{"size":1391,"mtime":1670067726513,"results":"39","hashOfConfig":"33"},{"size":2073,"mtime":1670063439801,"results":"40","hashOfConfig":"33"},{"size":5345,"mtime":1670063552002,"results":"41","hashOfConfig":"33"},{"size":2503,"mtime":1670063510314,"results":"42","hashOfConfig":"33"},{"size":6417,"mtime":1670077278103,"results":"43","hashOfConfig":"33"},{"size":4595,"mtime":1670063750866,"results":"44","hashOfConfig":"33"},{"size":4152,"mtime":1670063878731,"results":"45","hashOfConfig":"33"},{"size":9921,"mtime":1670064374331,"results":"46","hashOfConfig":"33"},{"size":3069,"mtime":1670063716461,"results":"47","hashOfConfig":"33"},{"size":4071,"mtime":1670063815218,"results":"48","hashOfConfig":"33"},{"size":4745,"mtime":1670063653720,"results":"49","hashOfConfig":"33"},{"size":4988,"mtime":1670063828934,"results":"50","hashOfConfig":"33"},{"size":3039,"mtime":1670063637270,"results":"51","hashOfConfig":"33"},{"size":5007,"mtime":1670063600344,"results":"52","hashOfConfig":"33"},{"size":8839,"mtime":1670063693480,"results":"53","hashOfConfig":"33"},{"size":4954,"mtime":1670063776652,"results":"54","hashOfConfig":"33"},{"size":2132,"mtime":1669891045833,"results":"55","hashOfConfig":"33"},{"size":448,"mtime":1669875296607,"results":"56","hashOfConfig":"33"},{"size":699,"mtime":1669875296546,"results":"57","hashOfConfig":"33"},{"size":1285,"mtime":1670063573665,"results":"58","hashOfConfig":"33"},{"size":1805,"mtime":1670064893926,"results":"59","hashOfConfig":"33"},{"size":570,"mtime":1670066851522,"results":"60","hashOfConfig":"33"},{"size":1357,"mtime":1669875296472,"results":"61","hashOfConfig":"33"},{"size":1962,"mtime":1669875296372,"results":"62","hashOfConfig":"33"},{"size":1613,"mtime":1669875296432,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"hgxxy",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"67"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"67"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"67"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"67"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"67"},"E:\\Practice\\Frontend\\src\\index.js",[],[],[],"E:\\Practice\\Frontend\\src\\App.js",[],[],"E:\\Practice\\Frontend\\src\\pages\\AboutUs.jsx",["173"],[],"import naveen from \"../images/naveen.jpg\";\r\n\r\nconst AboutUs = () => {\r\n  return (\r\n    <div className=\"text-color ms-5 me-5 mr-5 mt-3\">\r\n      <h1><u>Owner Details</u></h1>\r\n      <img src={naveen} height={150} width={150}></img><h5>Name: Badisa Naveen</h5>\r\n      <a href=\"https://www.linkedin.com/in/badisanaveen/\">Linkedin</a> <span></span>\r\n      <a href=\"https://github.com/naveen5655\">Github</a>\r\n     <h4>Stock Management is the complete Guide to Managing Your Ecommerce Products.</h4>\r\n     <h4>\r\n     Stock management involves:</h4>\r\n       <h5>1.Tracking fluctuations in your stock</h5>\r\n       <h5>2.Monitoring the condition of your stock</h5>\r\n       <h5>3.Understanding customer demand for stock</h5>\r\n       <h5>4.Determining costs for materials</h5>\r\n       <h5>5.Calculating shipping, handling, and storage costs</h5>\r\n     <br/>\r\n    <h5>\r\n      \"Stock management is crucial for ecommerce companies for many reasons. First, it guarantees that goods are offered when clients wish to buy them. Second, it helps prevent overstocking, which can waste money and cause storage and logistical issues\"\r\n    </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;","E:\\Practice\\Frontend\\src\\pages\\AddCardDetails.jsx",[],[],"E:\\Practice\\Frontend\\src\\pages\\Header.jsx",["174"],[],"import { Link } from \"react-router-dom\";\r\nimport RoleNav from \"./RoleNav\";\r\nimport logo from \"../images/e_logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar  navbar-expand-lg custom-bg text-color\">\r\n        <div class=\"container-fluid text-color\">\r\n          <img\r\n            src={logo}\r\n            width=\"35\"\r\n            height=\"35\"\r\n            class=\"d-inline-block align-top\"\r\n            alt=\"No Image\"\r\n          />\r\n          <Link to=\"/\" class=\"navbar-brand\">\r\n            <i>\r\n              <b className=\"text-color\">  STOCK MANAGEMENT</b>\r\n            </i>\r\n          </Link>\r\n\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li class=\"nav-item\">\r\n                <Link to=\"/about\" class=\"nav-link active\" aria-current=\"page\">\r\n                  <b className=\"text-color\">About Us</b>\r\n                </Link>\r\n              </li>\r\n\r\n              <li class=\"nav-item\">\r\n                <Link to=\"/contact\" class=\"nav-link active\" aria-current=\"page\">\r\n                  <b className=\"text-color\">Feedback form</b>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <RoleNav />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\Practice\\Frontend\\src\\pages\\Product.jsx",["175","176"],[],"import GetAllCategories from \"../productComponent/GetAllCategories\";\r\nimport CategoryNavigator from \"../productComponent/CategoryNavigator\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst Product = () => {\r\n  const { productId, categoryId } = useParams();\r\n\r\n  let user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n\r\n  const [quantity, setQuantity] = useState(\"\");\r\n\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const [product, setProduct] = useState({\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    quantity: \"\",\r\n    price: \"\",\r\n    imageName: \"\",\r\n    category: { id: \"\", title: \"\" },\r\n  });\r\n\r\n  const retrieveProduct = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/id?productId=\" + productId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      const retrievedProduct = await retrieveProduct();\r\n\r\n      setProduct(retrievedProduct);\r\n    };\r\n\r\n    const getProductsByCategory = async () => {\r\n      const allProducts = await retrieveProductsByCategory();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    getProduct();\r\n    getProductsByCategory();\r\n  }, [productId]);\r\n\r\n  const retrieveProductsByCategory = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/category?categoryId=\" + categoryId\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const saveProductToCart = (userId) => {\r\n    fetch(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/cart/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        quantity: quantity,\r\n        userId: userId,\r\n        productId: productId,\r\n      }),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n\r\n      toast.success(\"Products added to Cart Successfully!!!\", {\r\n        position: \"top-center\",\r\n        autoClose: 1000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n      });\r\n    });\r\n  };\r\n\r\n  const addToCart = (e) => {\r\n    if (user == null) {\r\n      alert(\"Please login to buy the products!!!\");\r\n      e.preventDefault();\r\n    } else {\r\n      saveProductToCart(user.id);\r\n      setQuantity(\"\");\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2 mt-2\">\r\n          <GetAllCategories />\r\n        </div>\r\n        <div class=\"col-sm-3 mt-2 admin\">\r\n          <div class=\"card form-card border-color custom-bg\">\r\n            <img\r\n              src={\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/\" + product.imageName}\r\n              style={{\r\n                maxHeight: \"500px\",\r\n                maxWidth: \"100%\",\r\n                width: \"auto\",\r\n              }}\r\n              class=\"card-img-top rounded mx-auto d-block m-2\"\r\n              alt=\"img\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-7 mt-2\">\r\n          <div class=\"card form-card border-color custom-bg\">\r\n            <div class=\"card-header bg-color\">\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h1 className=\"custom-bg-text\">{product.title}</h1>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-body text-left text-color\">\r\n              <div class=\"text-left mt-3\">\r\n                <h3>Description :</h3>\r\n              </div>\r\n              <h4 class=\"card-text\">{product.description}</h4>\r\n            </div>\r\n\r\n            <div class=\"card-footer custom-bg\">\r\n              <div className=\"text-center text-color\">\r\n                <p>\r\n                  <span>\r\n                    <h4>Price : &#8377;{product.price}</h4>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <form class=\"row g-3\" onSubmit={addToCart}>\r\n                    <div class=\"col-auto\">\r\n                      <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        id=\"addToCart\"\r\n                        placeholder=\"Enter Quantity...\"\r\n                        onChange={(e) => setQuantity(e.target.value)}\r\n                        value={quantity}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <input\r\n                        type=\"submit\"\r\n                        className=\"btn bg-color custom-bg-text mb-3\"\r\n                        value=\"Add to Cart\"\r\n                      />\r\n                      <ToastContainer />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n                <p class=\"ml-2 text-color\">\r\n                  <b>Stock : {product.quantity}</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mt-2\">\r\n        <div className=\"col-sm-2\"></div>\r\n\r\n        <div className=\"col-sm-10\">\r\n          <h2>Related Products:</h2>\r\n          <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n              \r\n                {products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n              </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","E:\\Practice\\Frontend\\src\\pages\\ContactUs.jsx",[],[],"E:\\Practice\\Frontend\\src\\pages\\HomePage.jsx",["177"],[],"import Carousel from \"./Carousel\";\r\nimport GetAllCategories from \"../productComponent/GetAllCategories\";\r\nimport ProductCard from \"../productComponent/ProductCard\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getAllProducts = async () => {\r\n      const allProducts = await retrieveAllProducts();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    const getProductsByCategory = async () => {\r\n      const allProducts = await retrieveProductsByCategory();\r\n      if (allProducts) {\r\n        setProducts(allProducts);\r\n      }\r\n    };\r\n\r\n    if (categoryId == null) {\r\n      console.log(\"Category Id is null\");\r\n      getAllProducts();\r\n    } else {\r\n      console.log(\"Category Id is NOT null\");\r\n      getProductsByCategory();\r\n    }\r\n  }, [categoryId]);\r\n\r\n  const retrieveAllProducts = async () => {\r\n    const response = await axios.get(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/all\");\r\n\r\n    return response.data;\r\n  };\r\n\r\n  const retrieveProductsByCategory = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/category?categoryId=\" + categoryId\r\n    );\r\n\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mb-2\">\r\n      <Carousel />\r\n      <div className=\"mt-2 mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <GetAllCategories />\r\n          </div>\r\n          <div className=\"col-md-10\">\r\n            <div className=\"row row-cols-1 row-cols-md-4 g-4\">\r\n              \r\n                {products.map((product) => {\r\n                  return <ProductCard item={product} />;\r\n                })}\r\n              </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","E:\\Practice\\Frontend\\src\\productComponent\\AddProductForm.jsx",["178"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AddProductForm = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const retrieveAllCategories = async () => {\r\n    const response = await axios.get(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/category/all\");\r\n    return response.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllCategories = async () => {\r\n      const allCategories = await retrieveAllCategories();\r\n      if (allCategories) {\r\n        setCategories(allCategories);\r\n      }\r\n    };\r\n\r\n    getAllCategories();\r\n  }, []);\r\n\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  const [product, setProduct] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    quantity: \"\",\r\n    categoryId: \"\",\r\n  });\r\n\r\n  const handleInput = (e) => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const saveProduct = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedPhoto);\r\n    formData.append(\"title\", product.title);\r\n    formData.append(\"description\", product.description);\r\n    formData.append(\"price\", product.price);\r\n    formData.append(\"quantity\", product.quantity);\r\n    formData.append(\"categoryId\", product.categoryId);\r\n\r\n    axios\r\n      .post(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/add\", formData)\r\n      .then((resp) => {\r\n        let result = resp.data.data;\r\n        alert(\"Product saved successfully\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        alert(\"Error saving product\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div\r\n          class=\"card form-card border-color custom-bg\"\r\n          style={{ width: \"25rem\" }}\r\n        >\r\n          <div className=\"card-header bg-color custom-bg-text text-center\">\r\n            <h5 class=\"card-title\">Add Product</h5>\r\n          </div>\r\n          <div class=\"card-body text-color\">\r\n            <form>\r\n              <div class=\"mb-3\">\r\n                <label for=\"title\" class=\"form-label\">\r\n                  <b>Product Title</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  onChange={handleInput}\r\n                  value={product.title}\r\n                />\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"description\" class=\"form-label\">\r\n                  <b>Product Description</b>\r\n                </label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  rows=\"3\"\r\n                  onChange={handleInput}\r\n                  value={product.description}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">\r\n                  <b>Category</b>\r\n                </label>\r\n\r\n                <select\r\n                  name=\"categoryId\"\r\n                  onChange={handleInput}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n\r\n                  {categories.map((category) => {\r\n                    return (\r\n                      <option value={category.id}> {category.title} </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"mb-3 mt-1\">\r\n                <label for=\"quantity\" class=\"form-label\">\r\n                  <b>Product Quantity</b>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"quantity\"\r\n                  name=\"quantity\"\r\n                  onChange={handleInput}\r\n                  value={product.quantity}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"price\" class=\"form-label\">\r\n                  <b>Product Price</b>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  class=\"form-control\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleInput}\r\n                  value={product.price}\r\n                />\r\n              </div>\r\n\r\n              <div class=\"mb-3\">\r\n                <label for=\"formFile\" class=\"form-label\">\r\n                  <b> Select Product Image</b>\r\n                </label>\r\n                <input\r\n                  class=\"form-control\"\r\n                  type=\"file\"\r\n                  id=\"formFile\"\r\n                  name=\"photo\"\r\n                  value={product.photo}\r\n                  onChange={(e) => setSelectedPhoto(e.target.files[0])}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn bg-color custom-bg-text\"\r\n                onClick={saveProduct}\r\n              >\r\n                Add Product\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n","E:\\Practice\\Frontend\\src\\productComponent\\AddCategoryForm.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\AddUserForm.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\MyCart.jsx",["179"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst MyCart = () => {\r\n  let navigate = useNavigate();\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const [totatPrice, setTotalPrice] = useState(\"\");\r\n  const [myCartData, setMyCartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyCart = async () => {\r\n      const myCart = await retrieveMyCart();\r\n      if (myCart) {\r\n        console.log(\"cart data is present :)\");\r\n        console.log(myCart.totalCartPrice);\r\n        console.log(myCart.cartData);\r\n        setTotalPrice(myCart.totalCartPrice);\r\n        setMyCartData(myCart.cartData);\r\n      }\r\n    };\r\n\r\n    getMyCart();\r\n  }, []);\r\n\r\n  const retrieveMyCart = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/mycart?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const deleteProductFromCart = (cartId, e) => {\r\n    const response = axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/mycart/remove?cartId=\" + cartId\r\n    );\r\n\r\n    console.log(response);\r\n  };\r\n\r\n  const checkout = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"CHECKOUT PAGE REQUEST\");\r\n    navigate(\"/user/order/payment\", { state: { priceToPay: totatPrice } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 custom-bg border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h2>My Cart</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myCartData.map((cartData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/\" +\r\n                            cartData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{cartData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <button\r\n                          className=\"btn bg-color custom-bg-text btn-sm\"\r\n                          onClick={() => deleteProductFromCart(cartData.cartId)}\r\n                        >\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-footer custom-bg\">\r\n          <div className=\"float-right\">\r\n            <div\r\n              className=\"text-color me-2\"\r\n              style={{\r\n                textAlign: \"right\",\r\n              }}\r\n            >\r\n              <h5>Total Price: &#8377; {totatPrice}/-</h5>\r\n            </div>\r\n\r\n            <div className=\"float-end me-2\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-color custom-bg-text mb-3\"\r\n                onClick={checkout}\r\n              >\r\n                Checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCart;\r\n","E:\\Practice\\Frontend\\src\\userComponent\\UserLoginForm.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\SearchOrder.jsx",["180"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst SearchOrder = () => {\r\n  const [allOrderData, setAllOrderData] = useState([]);\r\n  const [orderId, setOrderId] = useState(\"\");\r\n\r\n  const deliveryStatus = [\"Delivered\", \"On the Way\", \"Processing\"];\r\n  const deliveryTime = [\"Morning\", \"Afternoon\", \"Evening\", \"Night\"];\r\n\r\n  const [orderDeliveryStatus, setOrderDeliveryStatus] = useState({\r\n    orderId: \"\",\r\n    deliveryStatus: \"\",\r\n    deliveryTime: \"\",\r\n    deliveryDate: \"\",\r\n  });\r\n\r\n  const handleOrderDelivery = (e) => {\r\n    setOrderDeliveryStatus({\r\n      ...orderDeliveryStatus,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const getAllOrder = async () => {\r\n    const allOrder = await retrieveAllOrder();\r\n    if (allOrder) {\r\n      setAllOrderData(allOrder);\r\n    }\r\n  };\r\n\r\n  const retrieveAllOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/admin/showorder?orderId=\" + orderId\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const searchOrderById = (e) => {\r\n    getAllOrder();\r\n    setOrderId(\"\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  const updateDeliveryStatus = (e) => {\r\n    console.log(\"CLICKED DELIVERY STATUS UPDATED\");\r\n    fetch(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/admin/order/deliveryStatus/update\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(orderDeliveryStatus),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        console.log(\"response\", res);\r\n        setAllOrderData({\r\n          orderId: \"\",\r\n          deliveryStatus: \"\",\r\n          deliveryTime: \"\",\r\n          deliveryDate: \"\",\r\n        });\r\n\r\n        setAllOrderData(res);\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"card form-card mt-1 ms-2 me-2 mb-2 custom-bg\"\r\n        style={{\r\n          height: \"35rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h4>Searh Customer Orders</h4>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <form class=\"row g-3\">\r\n            <div class=\"col-auto\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"inputPassword2\"\r\n                placeholder=\"Enter Order Id...\"\r\n                onChange={(e) => setOrderId(e.target.value)}\r\n                value={orderId}\r\n              />\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn bg-color custom-bg-text mb-3\"\r\n                onClick={searchOrderById}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {allOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"card form-card ms-2 me-2 mb-2 custom-bg\">\r\n          <div className=\"card-header text-center bg-color custom-bg-text\">\r\n            <h4>Update Delivery Status</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form class=\"row g-3\">\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Order Id</b>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  placeholder=\"Enter Order Id...\"\r\n                  name=\"orderId\"\r\n                  onChange={handleOrderDelivery}\r\n                  value={handleOrderDelivery.orderId}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Select Delivery Date</b>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  id=\"inputPassword2\"\r\n                  name=\"deliveryDate\"\r\n                  placeholder=\"dd-mm-yyyy\"\r\n                  min=\"1997-01-01\"\r\n                  max=\"2030-12-31\"\r\n                  value={handleOrderDelivery.deliveryDate}\r\n                  onChange={handleOrderDelivery}\r\n                />\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Time</b>\r\n                </label>\r\n\r\n                <select\r\n                  name=\"deliveryTime\"\r\n                  value={handleOrderDelivery.deliveryTime}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Time</option>\r\n\r\n                  {deliveryTime.map((time) => {\r\n                    return <option value={time}> {time} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <label className=\"text-color\">\r\n                  <b>Delivery Status</b>\r\n                </label>\r\n                <select\r\n                  name=\"deliveryStatus\"\r\n                  value={handleOrderDelivery.deliveryStatus}\r\n                  onChange={handleOrderDelivery}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">Select Delivery Status</option>\r\n\r\n                  {deliveryStatus.map((status) => {\r\n                    return <option value={status}> {status} </option>;\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div class=\"col-auto\">\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn bg-color custom-bg-text mt-4\"\r\n                  onClick={updateDeliveryStatus}\r\n                >\r\n                  Update Delivery Status\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchOrder;\r\n","E:\\Practice\\Frontend\\src\\userComponent\\DeliveryPersonLogin.jsx",["181","182","183"],[],"import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DeliveryPersonLogin = () => {\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({});\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/deliveryperson/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        sessionStorage.setItem(\"active-delivery\", JSON.stringify(res));\r\n        toast.success(\"logged in successfully!!!\", {\r\n          position: \"top-center\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n    });\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div className=\"card form-card border-color\" style={{ width: \"25rem\" }}>\r\n          <div className=\"card-header bg-color text-center\">\r\n            <h4 className=\"card-title\">Delivery Person Login</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label for=\"emailId\" class=\"form-label custom-bg-text\">\r\n                  Email Id\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"emailId\"\r\n                  name=\"emailId\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.emailId}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label for=\"password\" className=\"form-label custom-bg-text\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.password}\r\n                  autoComplete=\"on\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn custom-bg text-color\"\r\n                onClick={loginAction}\r\n              >\r\n                Login\r\n              </button>\r\n              <ToastContainer />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryPersonLogin;\r\n","E:\\Practice\\Frontend\\src\\userComponent\\MyOrder.jsx",["184"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst MyOrder = () => {\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-user\"));\r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/myorder?userId=\" + user.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 custom-bg\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h2>My Orders</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","E:\\Practice\\Frontend\\src\\userComponent\\AllOrders.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\RegisterAdminForm.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\AdminLoginPage.jsx",["185","186","187"],[],"import { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminLoginPage = () => {\r\n  const [loginRequest, setLoginRequest] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [response, setResponse] = useState({});\r\n\r\n  const handleUserInput = (e) => {\r\n    setLoginRequest({ ...loginRequest, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const loginAction = (e) => {\r\n    fetch(\"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/admin/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginRequest),\r\n    }).then((result) => {\r\n      console.log(\"result\", result);\r\n      result.json().then((res) => {\r\n        sessionStorage.setItem(\"active-admin\", JSON.stringify(res));\r\n        toast.success(\"logged in successfully!!!\", {\r\n          position: \"top-center\",\r\n          autoClose: 1000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      });\r\n    });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-2 d-flex aligns-items-center justify-content-center\">\r\n        <div className=\"card form-card border-color\" style={{ width: \"25rem\" }}>\r\n          <div className=\"card-header bg-color text-center\">\r\n            <h4 className=\"card-title\">Admin Login</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label for=\"emailId\" class=\"form-label custom-bg-text\">\r\n                  Email Id\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"emailId\"\r\n                  name=\"emailId\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.emailId}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label for=\"password\" className=\"form-label custom-bg-text\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  onChange={handleUserInput}\r\n                  value={loginRequest.password}\r\n                  autoComplete=\"on\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn custom-bg text-color\"\r\n                onClick={loginAction}\r\n              >\r\n                Login\r\n              </button>\r\n              <ToastContainer />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLoginPage;\r\n","E:\\Practice\\Frontend\\src\\userComponent\\AddDeliveryPerson.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\AssignDeliveryToOrders.jsx",[],[],"E:\\Practice\\Frontend\\src\\userComponent\\MyDeliveries.jsx",["188"],[],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nconst MyDeliveries = () => {\r\n  const delivery = JSON.parse(sessionStorage.getItem(\"active-delivery\"));\r\n  const [myOrderData, setMyOrderData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMyOrder = async () => {\r\n      const myOrder = await retrieveMyOrder();\r\n      if (myOrder) {\r\n        console.log(\"my order data is present :)\");\r\n\r\n        setMyOrderData(myOrder);\r\n      }\r\n    };\r\n\r\n    getMyOrder();\r\n  }, []);\r\n\r\n  const retrieveMyOrder = async () => {\r\n    const response = await axios.get(\r\n      \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/user/delivery/myorder?deliveryPersonId=\" +\r\n        delivery.id\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div\r\n        className=\"card form-card ms-2 me-2 mb-5 custom-bg border-color\"\r\n        style={{\r\n          height: \"45rem\",\r\n        }}\r\n      >\r\n        <div className=\"card-header text-center bg-color custom-bg-text\">\r\n          <h2>My Deliveries</h2>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-hover custom-bg-text text-center\">\r\n              <thead className=\"bg-color table-bordered border-color\">\r\n                <tr>\r\n                  <th scope=\"col\">Order Id</th>\r\n                  <th scope=\"col\">Product</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Customer Name</th>\r\n                  <th scope=\"col\">Street</th>\r\n                  <th scope=\"col\">City</th>\r\n                  <th scope=\"col\">Pin code</th>\r\n                  <th scope=\"col\">Mobile No.</th>\r\n                  <th scope=\"col\">Order Date</th>\r\n                  <th scope=\"col\">Delivery Date</th>\r\n                  <th scope=\"col\">Delivery Status</th>\r\n                  <th scope=\"col\">Delivery Person</th>\r\n                  <th scope=\"col\">Delivery Mobile No</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"text-color\">\r\n                {myOrderData.map((orderData) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <b>{orderData.orderId}</b>\r\n                      </td>\r\n                      <td>\r\n                        <img\r\n                          src={\r\n                            \"http://naveensdp3.us-east-1.elasticbeanstalk.com/api/product/\" +\r\n                            orderData.productImage\r\n                          }\r\n                          class=\"img-fluid\"\r\n                          alt=\"product_pic\"\r\n                          style={{\r\n                            maxWidth: \"90px\",\r\n                          }}\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.productDescription}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.quantity}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.totalPrice}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.street}</b>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <b>{orderData.address.city}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.address.pincode}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.userPhone}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.orderDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryDate}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryStatus}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonName}</b>\r\n                      </td>\r\n                      <td>\r\n                        <b>{orderData.deliveryPersonContact}</b>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyDeliveries;\r\n","E:\\Practice\\Frontend\\src\\pages\\Carousel.jsx",["189"],[],"import carousel1 from \"../images/carousel_1.jpeg\";\r\nimport side1 from \"../images/side1.jpg\";\r\nimport side3 from \"../images/s3.jpg\";\r\nimport side4 from \"../images/side4.jpg\";\r\nconst Carousel = () => {\r\n  return (\r\n    <div\r\n      id=\"carouselExampleCaptions\"\r\n      class=\"carousel slide\"\r\n      data-bs-ride=\"false\"\r\n    >\r\n      <div class=\"carousel-indicators\">\r\n        <button\r\n          type=\"button\"\r\n          data-bs-target=\"#carouselExampleCaptions\"\r\n          data-bs-slide-to=\"0\"\r\n          class=\"active\"\r\n          aria-current=\"true\"\r\n          aria-label=\"Slide 1\"\r\n        ></button>\r\n        <button\r\n          type=\"button\"\r\n          data-bs-target=\"#carouselExampleCaptions\"\r\n          data-bs-slide-to=\"1\"\r\n          aria-label=\"Slide 2\"\r\n        ></button>\r\n        <button\r\n          type=\"button\"\r\n          data-bs-target=\"#carouselExampleCaptions\"\r\n          data-bs-slide-to=\"2\"\r\n          aria-label=\"Slide 3\"\r\n        ></button>\r\n      </div>\r\n      <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\">\r\n          <img src={side1}  Height={350} Width={500} class=\"d-block w-100\" alt=\"...\" />\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img src={side3} Height={350} Width={500} class=\"d-block w-100\" alt=\"...\" />\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img src={side4} Height={350} Width={500} class=\"d-block w-100\" alt=\"...\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"carousel-control-prev\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"prev\"\r\n      >\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"visually-hidden\">Previous</span>\r\n      </button>\r\n      <button\r\n        class=\"carousel-control-next\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"next\"\r\n      >\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"visually-hidden\">Next</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","E:\\Practice\\Frontend\\src\\productComponent\\CategoryNavigator.jsx",[],[],"E:\\Practice\\Frontend\\src\\pages\\RoleNav.jsx",[],[],"E:\\Practice\\Frontend\\src\\productComponent\\GetAllCategories.jsx",[],[],"E:\\Practice\\Frontend\\src\\productComponent\\ProductCard.jsx",[],[],"E:\\Practice\\Frontend\\src\\pages\\NormalHeader.jsx",[],[],"E:\\Practice\\Frontend\\src\\pages\\HeaderUser.jsx",["190"],[],"import { Link, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst HeaderUser = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const userLogout = () => {\r\n    toast.success(\"logged out!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    sessionStorage.removeItem(\"active-user\");\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0 me-5\">\r\n      <li class=\"nav-item\">\r\n        <Link to=\"/user/mycart\" class=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\">My Cart</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link to=\"/user/myorder\" class=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\">My Order</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n          onClick={userLogout}\r\n        >\r\n          <b className=\"text-color\">Logout</b>\r\n        </Link>\r\n        <ToastContainer />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default HeaderUser;\r\n","E:\\Practice\\Frontend\\src\\pages\\AdminHeader.jsx",["191"],[],"import { Link, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst AdminHeader = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-admin\"));\r\n  console.log(user);\r\n\r\n  const adminLogout = () => {\r\n    toast.success(\"logged out!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    sessionStorage.removeItem(\"active-admin\");\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0 me-5\">\r\n      <li class=\"nav-item\">\r\n        <Link to=\"/addcategory\" class=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\"> Add Category</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link to=\"/addproduct\" class=\"nav-link active\" aria-current=\"page\">\r\n          <b className=\"text-color\">Add Product</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/admin/allorder\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">All Orders</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/admin/assigndelivery\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">Assign Order Delivery</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n          onClick={adminLogout}\r\n        >\r\n          <b className=\"text-color\">Logout</b>\r\n        </Link>\r\n        <ToastContainer />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","E:\\Practice\\Frontend\\src\\pages\\DeliveryPersonHeader.jsx",["192"],[],"import { Link, useNavigate } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst DeliveryPersonHeader = () => {\r\n  let navigate = useNavigate();\r\n\r\n  const user = JSON.parse(sessionStorage.getItem(\"active-delivery\"));\r\n  console.log(user);\r\n\r\n  const userLogout = () => {\r\n    toast.success(\"logged out!!!\", {\r\n      position: \"top-center\",\r\n      autoClose: 1000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n    sessionStorage.removeItem(\"active-delivery\");\r\n    window.location.reload(true);\r\n  };\r\n\r\n  return (\r\n    <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0 me-5 text-color\">\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/delivery/myorders\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">My Deliveries</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"/user/admin/searchOrder\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n        >\r\n          <b className=\"text-color\">Update Order Delivery</b>\r\n        </Link>\r\n      </li>\r\n\r\n      <li class=\"nav-item\">\r\n        <Link\r\n          to=\"\"\r\n          class=\"nav-link active\"\r\n          aria-current=\"page\"\r\n          onClick={userLogout}\r\n        >\r\n          <b className=\"text-color\">Logout</b>\r\n        </Link>\r\n        <ToastContainer />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default DeliveryPersonHeader;\r\n",{"ruleId":"193","severity":1,"message":"194","line":7,"column":7,"nodeType":"195","endLine":7,"endColumn":50},{"ruleId":"196","severity":1,"message":"197","line":10,"column":11,"nodeType":"195","endLine":16,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":25},{"ruleId":"202","severity":1,"message":"203","line":52,"column":6,"nodeType":"204","endLine":52,"endColumn":17,"suggestions":"205"},{"ruleId":"202","severity":1,"message":"206","line":35,"column":6,"nodeType":"204","endLine":35,"endColumn":18,"suggestions":"207"},{"ruleId":"198","severity":1,"message":"208","line":48,"column":13,"nodeType":"200","messageId":"201","endLine":48,"endColumn":19},{"ruleId":"202","severity":1,"message":"209","line":25,"column":6,"nodeType":"204","endLine":25,"endColumn":8,"suggestions":"210"},{"ruleId":"198","severity":1,"message":"211","line":1,"column":20,"nodeType":"200","messageId":"201","endLine":1,"endColumn":29},{"ruleId":"198","severity":1,"message":"212","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"198","severity":1,"message":"213","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":18},{"ruleId":"198","severity":1,"message":"214","line":12,"column":20,"nodeType":"200","messageId":"201","endLine":12,"endColumn":31},{"ruleId":"202","severity":1,"message":"215","line":20,"column":6,"nodeType":"204","endLine":20,"endColumn":8,"suggestions":"216"},{"ruleId":"198","severity":1,"message":"212","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"198","severity":1,"message":"213","line":12,"column":10,"nodeType":"200","messageId":"201","endLine":12,"endColumn":18},{"ruleId":"198","severity":1,"message":"214","line":12,"column":20,"nodeType":"200","messageId":"201","endLine":12,"endColumn":31},{"ruleId":"202","severity":1,"message":"215","line":20,"column":6,"nodeType":"204","endLine":20,"endColumn":8,"suggestions":"217"},{"ruleId":"198","severity":1,"message":"218","line":1,"column":8,"nodeType":"200","messageId":"201","endLine":1,"endColumn":17},{"ruleId":"198","severity":1,"message":"219","line":6,"column":7,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},{"ruleId":"198","severity":1,"message":"219","line":6,"column":7,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},{"ruleId":"198","severity":1,"message":"219","line":6,"column":7,"nodeType":"200","messageId":"201","endLine":6,"endColumn":15},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'CategoryNavigator' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'retrieveProduct' and 'retrieveProductsByCategory'. Either include them or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'retrieveProductsByCategory'. Either include it or remove the dependency array.",["221"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMyCart'. Either include it or remove the dependency array.",["222"],"'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrieveMyOrder'. Either include it or remove the dependency array.",["223"],["224"],"'carousel1' is defined but never used.","'navigate' is assigned a value but never used.",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"231","fix":"233"},"Update the dependencies array to be: [productId, retrieveProduct, retrieveProductsByCategory]",{"range":"234","text":"235"},"Update the dependencies array to be: [categoryId, retrieveProductsByCategory]",{"range":"236","text":"237"},"Update the dependencies array to be: [retrieveMyCart]",{"range":"238","text":"239"},"Update the dependencies array to be: [retrieveMyOrder]",{"range":"240","text":"241"},{"range":"242","text":"241"},[1457,1468],"[productId, retrieveProduct, retrieveProductsByCategory]",[1002,1014],"[categoryId, retrieveProductsByCategory]",[773,775],"[retrieveMyCart]",[514,516],"[retrieveMyOrder]",[527,529]]